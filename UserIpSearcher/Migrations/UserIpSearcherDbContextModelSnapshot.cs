// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserIpSearcher.DbContexts;

#nullable disable

namespace UserIpSearcher.Migrations
{
    [DbContext(typeof(UserIpSearcherDbContext))]
    partial class UserIpSearcherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserIpSearcher.Entities.EventData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserIpEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserIpEventId");

                    b.ToTable("EventData");
                });

            modelBuilder.Entity("UserIpSearcher.Entities.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Address");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("UserIpSearcher.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("AccountNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserIpSearcher.Entities.UserIpEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("IpId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserIpEvents");
                });

            modelBuilder.Entity("UserIpSearcher.Entities.EventData", b =>
                {
                    b.HasOne("UserIpSearcher.Entities.UserIpEvent", "UserIpEvent")
                        .WithMany("Data")
                        .HasForeignKey("UserIpEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserIpEvent");
                });

            modelBuilder.Entity("UserIpSearcher.Entities.UserIpEvent", b =>
                {
                    b.HasOne("UserIpSearcher.Entities.Ip", "Ip")
                        .WithMany("UserIpEvents")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserIpSearcher.Entities.User", "User")
                        .WithMany("UserIpEvents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserIpSearcher.Entities.Ip", b =>
                {
                    b.Navigation("UserIpEvents");
                });

            modelBuilder.Entity("UserIpSearcher.Entities.User", b =>
                {
                    b.Navigation("UserIpEvents");
                });

            modelBuilder.Entity("UserIpSearcher.Entities.UserIpEvent", b =>
                {
                    b.Navigation("Data");
                });
#pragma warning restore 612, 618
        }
    }
}
